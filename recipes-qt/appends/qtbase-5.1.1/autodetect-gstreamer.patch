Taken from
http://code.qt.io/cgit/qt/qtbase.git/commit/?id=710cb8e2fc421b2ae752dd533f4d2eb9c4521f28

Add configure option and tests for GStreamer.
Qt Multimedia can be compiled with either GStreamer 0.10 or 1.0.
0.10 takes precedence over 1.0 if both are available (1.0 will be used
by default in Qt 5.6).
Auto-detection can be overridden with -gstreamer <version>.

Change-Id: I74d58d2c146c842902375b4d1e5e6e96d32addac
Reviewed-by: Oswald Buddenhagen <oswald.buddenhagen@theqtcompany.com>

Index: qtbase/config.tests/unix/gstreamer/gstreamer.cpp
===================================================================
--- qtbase.orig/config.tests/unix/gstreamer/gstreamer.cpp
+++ qtbase/config.tests/unix/gstreamer/gstreamer.cpp
@@ -39,17 +39,12 @@
 **
 ****************************************************************************/
 
-#include <gst/gst.h>
-#include <gst/interfaces/propertyprobe.h>
-#include <gst/interfaces/xoverlay.h>
+#define GST_USE_UNSTABLE_API
 
-#if !defined(GST_VERSION_MAJOR) \
-    || !defined(GST_VERSION_MINOR)
-#  error "No GST_VERSION_* macros"
-#elif GST_VERION_MAJOR != 0 && GST_VERSION_MINOR != 10
-#  error "Incompatible version of GStreamer found (Version 0.10.x is required)."
-#endif
+#include <gst/gst.h>
 
-int main(int argc, char **argv)
+int main(int, char**)
 {
+    gst_is_initialized();
+    return 0;
 }
Index: qtbase/config.tests/unix/gstreamer/gstreamer.pro
===================================================================
--- qtbase.orig/config.tests/unix/gstreamer/gstreamer.pro
+++ qtbase/config.tests/unix/gstreamer/gstreamer.pro
@@ -1,3 +1,21 @@
-SOURCES = gstreamer.cpp
+SOURCES += gstreamer.cpp
+
+CONFIG += link_pkgconfig
+
+gst-0.10 {
+    PKGCONFIG_PRIVATE += \
+        gstreamer-0.10 \
+        gstreamer-base-0.10 \
+        gstreamer-audio-0.10 \
+        gstreamer-video-0.10 \
+        gstreamer-pbutils-0.10
+} else:gst-1.0 {
+    PKGCONFIG_PRIVATE += \
+        gstreamer-1.0 \
+        gstreamer-base-1.0 \
+        gstreamer-audio-1.0 \
+        gstreamer-video-1.0 \
+        gstreamer-pbutils-1.0
+}
+
 CONFIG -= qt
-LIBS += -lgstinterfaces-0.10 -lgstvideo-0.10 -lgstbase-0.10
Index: qtbase/configure
===================================================================
--- qtbase.orig/configure
+++ qtbase/configure
@@ -948,6 +948,7 @@ CFG_ICONV=auto
 CFG_DBUS=auto
 CFG_GLIB=auto
 CFG_GSTREAMER=auto
+CFG_GSTREAMER_VERSION=""
 CFG_QGTKSTYLE=auto
 CFG_LARGEFILE=auto
 CFG_OPENSSL=auto
@@ -1228,6 +1229,16 @@ while [ "$#" -gt 0 ]; do
             VAL=$1
         fi
 	;;
+    -gstreamer)
+        VAR=gstreamer
+        # this option may or may not be followed by an argument
+        if [ -z "$2" ] || echo "$2" | grep '^-' >/dev/null 2>&1; then
+            VAL=yes
+        else
+            shift;
+            VAL=$1
+        fi
+        ;;
     -hostprefix)
         VAR=`echo $1 | sed "s,^-\(.*\),\1,"`
         # this option may or may not be followed by an argument
@@ -2033,7 +2044,9 @@ while [ "$#" -gt 0 ]; do
         fi
         ;;
     gstreamer)
-        if [ "$VAL" = "yes" ] || [ "$VAL" = "no" ]; then
+        if  [ "$VAL" = "auto" ] || [ "$VAL" = "yes" ] ||
+            [ "$VAL" = "0.10" ] || [ "$VAL" = "1.0" ] ||
+            [ "$VAL" = "no" ]; then
             CFG_GSTREAMER="$VAL"
         else
             UNKNOWN_OPT=yes
@@ -3690,6 +3703,12 @@ Additional options:
                           OpenGL ES 2, or regular desktop OpenGL.
                           Use es2 for <api> to override auto-detection.
 
+    -no-gstreamer ....... Do not support GStreamer.
+    -gstreamer <version>  Enable GStreamer support
+                          With no parameter, this will attempt to auto-detect GStreamer 0.10 and
+                          1.0. GStreamer 0.10 is used by default when available.
+                          Use 0.10 or 1.0 for <version> to override auto-detection.
+
  *  -no-system-proxies .. Do not use system network proxies by default.
     -system-proxies ..... Use system network proxies by default.
 
@@ -5004,29 +5023,40 @@ elif [ "$CFG_GLIB" = "no" ]; then
     CFG_QGTKSTYLE=no
 fi
 
-# ### Vestige
-if [ "$CFG_GLIB" = "yes" -a "$CFG_GSTREAMER" != "no" ]; then
-    if [ -n "$PKG_CONFIG" ]; then
-        QT_CFLAGS_GSTREAMER=`$PKG_CONFIG --cflags gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`
-        QT_LIBS_GSTREAMER=`$PKG_CONFIG --libs gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`
-    fi
-    if compileTest unix/gstreamer "GStreamer" $QT_CFLAGS_GSTREAMER $QT_LIBS_GSTREAMER; then
+# detect GStreamer support
+if [ "$CFG_GSTREAMER" = "auto" ] || [ "$CFG_GSTREAMER" = "yes" ]; then
+    if compileTest unix/gstreamer "GStreamer 0.10" -config gst-0.10; then
+        CFG_GSTREAMER=yes
+        CFG_GSTREAMER_VERSION=0.10
+    elif compileTest unix/gstreamer "GStreamer 1.0" -config gst-1.0; then
         CFG_GSTREAMER=yes
-        QMakeVar set QT_CFLAGS_GSTREAMER "$QT_CFLAGS_GSTREAMER"
-        QMakeVar set QT_LIBS_GSTREAMER "$QT_LIBS_GSTREAMER"
+        CFG_GSTREAMER_VERSION=1.0
     else
-        if [ "$CFG_GSTREAMER" = "yes" ] && [ "$CFG_CONFIGURE_EXIT_ON_ERROR" = "yes" ]; then
-            echo "Gstreamer support cannot be enabled due to functionality tests!"
+        if [ "$CFG_GSTREAMER" = "yes" ]; then
+            echo "GStreamer support cannot be enabled due to functionality tests!"
             echo " Turn on verbose messaging (-v) to $0 to see the final report."
-            echo " If you believe this message is in error you may use the continue"
-            echo " switch (-continue) to $0 to continue."
-            exit 101
-        else
-            CFG_GSTREAMER=no
+            exit 1
         fi
+        CFG_GSTREAMER=no
+    fi
+elif [ "$CFG_GSTREAMER" = "0.10" ]; then
+    if compileTest unix/gstreamer "GStreamer 0.10" -config gst-0.10; then
+        CFG_GSTREAMER=yes
+        CFG_GSTREAMER_VERSION=0.10
+    else
+        echo "The GStreamer 0.10 functionality test failed!"
+        echo " Turn on verbose messaging (-v) to $0 to see the final report."
+        exit 1
+    fi
+elif [ "$CFG_GSTREAMER" = "1.0" ]; then
+    if compileTest unix/gstreamer "GStreamer 1.0" -config gst-1.0; then
+        CFG_GSTREAMER=yes
+        CFG_GSTREAMER_VERSION=1.0
+    else
+        echo "The GStreamer 1.0 functionality test failed!"
+        echo " Turn on verbose messaging (-v) to $0 to see the final report."
+        exit 1
     fi
-elif [ "$CFG_GLIB" = "no" ]; then
-    CFG_GSTREAMER=no
 fi
 
 # auto-detect libicu support
@@ -6104,6 +6134,9 @@ if [ "$CFG_PULSEAUDIO" = "yes" ]; then
     QT_CONFIG="$QT_CONFIG pulseaudio"
 fi
 
+[ "$CFG_GSTREAMER_VERSION" = "0.10" ] && QT_CONFIG="$QT_CONFIG gstreamer-0.10"
+[ "$CFG_GSTREAMER_VERSION" = "1.0" ] && QT_CONFIG="$QT_CONFIG gstreamer-1.0"
+
 if [ "$CFG_COREWLAN" = "yes" ]; then
     QT_CONFIG="$QT_CONFIG corewlan"
 fi
@@ -6898,7 +6931,7 @@ report_support_plugin "    GIF .........
 report_support_plugin "    JPEG ................." "$CFG_JPEG" "$CFG_LIBJPEG" QtGui
 report_support_plugin "    PNG .................." "$CFG_PNG" "$CFG_LIBPNG" QtGui
 report_support "  Glib ..................." "$CFG_GLIB"
-report_support "  GStreamer .............." "$CFG_GSTREAMER"
+report_support "  GStreamer .............." "$CFG_GSTREAMER" yes "$CFG_GSTREAMER_VERSION"
 report_support "  GTK theme .............." "$CFG_QGTKSTYLE"
 report_support "  Large File ............." "$CFG_LARGEFILE"
 report_support "  libudev ................" "$CFG_LIBUDEV"
